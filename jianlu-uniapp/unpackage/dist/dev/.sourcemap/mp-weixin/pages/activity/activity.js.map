{"version":3,"file":"activity.js","sources":["pages/activity/activity.vue","../../../D/HBuilderX.4.56.2025031210/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvYWN0aXZpdHkvYWN0aXZpdHkudnVl"],"sourcesContent":["<template>\n\t<view class=\"activity-page\">\n\t\t<!-- 顶部筛选栏 -->\n\t\t<view class=\"filter-bar\">\n\t\t\t<scroll-view class=\"filter-scroll\" scroll-x=\"true\" show-scrollbar=\"false\">\n\t\t\t\t<view class=\"filter-item\"\n\t\t\t\t\t:class=\"{ active: currentFilter === 'all' }\"\n\t\t\t\t\t@tap=\"setFilter('all')\">\n\t\t\t\t\t全部\n\t\t\t\t</view>\n\t\t\t\t<view class=\"filter-item\"\n\t\t\t\t\t:class=\"{ active: currentFilter === 'public' }\"\n\t\t\t\t\t@tap=\"setFilter('public')\">\n\t\t\t\t\t🌍 公开活动\n\t\t\t\t</view>\n\t\t\t\t<view class=\"filter-item\"\n\t\t\t\t\t:class=\"{ active: currentFilter === 'team' }\"\n\t\t\t\t\t@tap=\"setFilter('team')\">\n\t\t\t\t\t👥 团队活动\n\t\t\t\t</view>\n\t\t\t\t<view class=\"filter-item\"\n\t\t\t\t\t:class=\"{ active: currentFilter === 'my' }\"\n\t\t\t\t\t@tap=\"setFilter('my')\">\n\t\t\t\t\t📝 我的报名\n\t\t\t\t</view>\n\t\t\t</scroll-view>\n\t\t</view>\n\n\t\t<!-- 活动类型筛选 -->\n\t\t<view class=\"type-filter\" v-if=\"showTypeFilter\">\n\t\t\t<scroll-view class=\"type-scroll\" scroll-x=\"true\" show-scrollbar=\"false\">\n\t\t\t\t<view class=\"type-item\"\n\t\t\t\t\t:class=\"{ active: currentType === '' }\"\n\t\t\t\t\t@tap=\"setType('')\">\n\t\t\t\t\t全部类型\n\t\t\t\t</view>\n\t\t\t\t<view class=\"type-item\"\n\t\t\t\t\tv-for=\"(typeInfo, type) in activityTypes\"\n\t\t\t\t\t:key=\"type\"\n\t\t\t\t\t:class=\"{ active: currentType === type }\"\n\t\t\t\t\t@tap=\"setType(type)\">\n\t\t\t\t\t{{ typeInfo.icon }} {{ typeInfo.name }}\n\t\t\t\t</view>\n\t\t\t</scroll-view>\n\t\t</view>\n\n\t\t<!-- 活动列表 -->\n\t\t<view class=\"activity-list\">\n\t\t\t<view v-if=\"loading\" class=\"loading-state\">\n\t\t\t\t<text>加载中...</text>\n\t\t\t</view>\n\t\t\t\n\t\t\t<view v-else-if=\"activities.length > 0\">\n\t\t\t\t<view class=\"activity-card\" \n\t\t\t\t\tv-for=\"activity in activities\" \n\t\t\t\t\t:key=\"activity.id\"\n\t\t\t\t\t@tap=\"viewActivity(activity)\">\n\t\t\t\t\t\n\t\t\t\t\t<!-- 活动头部 -->\n\t\t\t\t\t<view class=\"activity-header\">\n\t\t\t\t\t\t<view class=\"activity-type\">\n\t\t\t\t\t\t\t{{ getTypeInfo(activity.activity_type).icon }}\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"activity-status\" :style=\"{ color: getStatusInfo(activity).color }\">\n\t\t\t\t\t\t\t{{ getStatusInfo(activity).text }}\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 活动内容 -->\n\t\t\t\t\t<view class=\"activity-content\">\n\t\t\t\t\t\t<text class=\"activity-title\">{{ activity.title }}</text>\n\t\t\t\t\t\t<text class=\"activity-desc\" v-if=\"activity.description\">{{ activity.description }}</text>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<view class=\"activity-details\">\n\t\t\t\t\t\t\t<view class=\"detail-item\">\n\t\t\t\t\t\t\t\t<text class=\"detail-icon\">📅</text>\n\t\t\t\t\t\t\t\t<text class=\"detail-text\">{{ formatDate(activity.start_time) }}</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<view class=\"detail-item\" v-if=\"activity.location\">\n\t\t\t\t\t\t\t\t<text class=\"detail-icon\">📍</text>\n\t\t\t\t\t\t\t\t<text class=\"detail-text\">{{ activity.location }}</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<view class=\"detail-item\">\n\t\t\t\t\t\t\t\t<text class=\"detail-icon\">👥</text>\n\t\t\t\t\t\t\t\t<text class=\"detail-text\">\n\t\t\t\t\t\t\t\t\t{{ activity.registration_count || 0 }}{{ activity.max_participants ? `/${activity.max_participants}` : '' }} 人参与\n\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<view class=\"activity-footer\">\n\t\t\t\t\t\t\t<text class=\"creator\">由 {{ activity.creator_name }} 创建</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 空状态 -->\n\t\t\t<view class=\"empty-state\" v-else>\n\t\t\t\t<text class=\"empty-icon\">📅</text>\n\t\t\t\t<text class=\"empty-title\">暂无活动</text>\n\t\t\t\t<text class=\"empty-subtitle\">快来创建第一个活动吧！</text>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 创建活动按钮 -->\n\t\t<view class=\"create-btn\" @tap=\"createActivity\">\n\t\t\t<text class=\"create-icon\">+</text>\n\t\t</view>\n\t</view>\n</template>\n\n<script>\n\timport { activityApi } from '../../api/index.js'\n\timport { showSuccess, showError, formatDate } from '../../utils/index.js'\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tactivities: [],\n\t\t\t\tactivityTypes: {}, // 活动类型数据，从API加载\n\t\t\t\tloading: false,\n\t\t\t\tcurrentFilter: 'all',\n\t\t\t\tcurrentType: '',\n\t\t\t\tshowTypeFilter: false\n\t\t\t}\n\t\t},\n\n\t\tonLoad() {\n\t\t\tthis.loadInitialData()\n\t\t},\n\n\t\tonShow() {\n\t\t\tthis.loadInitialData()\n\t\t},\n\n\t\tonPullDownRefresh() {\n\t\t\tthis.loadInitialData().finally(() => {\n\t\t\t\tuni.stopPullDownRefresh()\n\t\t\t})\n\t\t},\n\n\t\tmethods: {\n\t\t\t// 加载初始数据\n\t\t\tasync loadInitialData() {\n\t\t\t\tawait Promise.all([\n\t\t\t\t\tthis.loadActivities(),\n\t\t\t\t\tthis.loadActivityTypes()\n\t\t\t\t])\n\t\t\t},\n\n\t\t\t// 加载活动类型\n\t\t\tasync loadActivityTypes() {\n\t\t\t\ttry {\n\t\t\t\t\t// 从后端API获取真实活动类型数据\n\t\t\t\t\tconst response = await activityApi.getTypes()\n\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\t// 转换后端数据格式为前端需要的格式\n\t\t\t\t\t\tconst typesData = {}\n\t\t\t\t\t\tconst types = response.data || []\n\t\t\t\t\t\t\n\t\t\t\t\t\ttypes.forEach(type => {\n\t\t\t\t\t\t\t// 为每个类型添加图标\n\t\t\t\t\t\t\tconst icon = this.getTypeIcon(type.id)\n\t\t\t\t\t\t\ttypesData[type.id] = {\n\t\t\t\t\t\t\t\ticon: icon,\n\t\t\t\t\t\t\t\tname: type.name\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.activityTypes = typesData\n\t\t\t\t\t\tconsole.log(`成功加载 ${types.length} 个活动类型`)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(response.message || '获取活动类型失败')\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('加载活动类型失败:', error)\n\t\t\t\t\t// 降级到默认类型\n\t\t\t\t\tthis.activityTypes = {\n\t\t\t\t\t\tother: { icon: '📅', name: '其他' }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 根据类型ID获取对应图标\n\t\t\tgetTypeIcon(typeId) {\n\t\t\t\tconst iconMap = {\n\t\t\t\t\tmeeting: '💼',\n\t\t\t\t\tevent: '🎉', \n\t\t\t\t\ttraining: '📚',\n\t\t\t\t\tsocial: '🍽️',\n\t\t\t\t\tsports: '⚽',\n\t\t\t\t\ttravel: '🏖️',\n\t\t\t\t\tworkshop: '🔧',\n\t\t\t\t\tconference: '🎤',\n\t\t\t\t\tother: '📅'\n\t\t\t\t}\n\t\t\t\treturn iconMap[typeId] || '📅'\n\t\t\t},\n\n\t\t\t// 设置筛选条件\n\t\t\tsetFilter(filter) {\n\t\t\t\tthis.currentFilter = filter\n\t\t\t\tthis.showTypeFilter = filter !== 'all'\n\t\t\t\tthis.loadActivities()\n\t\t\t},\n\n\t\t\t// 设置类型筛选\n\t\t\tsetType(type) {\n\t\t\t\tthis.currentType = type\n\t\t\t\tthis.loadActivities()\n\t\t\t},\n\n\t\t\t// 加载活动列表\n\t\t\tasync loadActivities() {\n\t\t\t\tthis.loading = true\n\t\t\t\ttry {\n\t\t\t\t\tconst params = this.buildParams()\n\t\t\t\t\tconst response = await activityApi.getList(params)\n\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\t// 修复：活动数据在 response.data.activities 中\n\t\t\t\t\t\tconst activities = response.data.activities || response.data || []\n\t\t\t\t\t\tthis.activities = Array.isArray(activities) ? activities : []\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('加载活动失败:', error)\n\t\t\t\t\tshowError('加载活动失败')\n\t\t\t\t} finally {\n\t\t\t\t\tthis.loading = false\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 构建请求参数\n\t\t\tbuildParams() {\n\t\t\t\tconst params = {}\n\t\t\t\t\n\t\t\t\tif (this.currentFilter === 'public') {\n\t\t\t\t\tparams.visibility = 'public'\n\t\t\t\t} else if (this.currentFilter === 'team') {\n\t\t\t\t\tparams.visibility = 'team'\n\t\t\t\t} else if (this.currentFilter === 'my') {\n\t\t\t\t\tparams.my_registrations = true\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.currentType) {\n\t\t\t\t\tparams.activity_type = this.currentType\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn params\n\t\t\t},\n\n\t\t\t// 查看活动详情\n\t\t\tviewActivity(activity) {\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: `/pages/activity-detail/activity-detail?id=${activity.id}`\n\t\t\t\t})\n\t\t\t},\n\n\t\t\t// 创建活动\n\t\t\tcreateActivity() {\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: '/pages/activity-create/activity-create'\n\t\t\t\t})\n\t\t\t},\n\n\t\t\t// 格式化日期\n\t\t\tformatDate(date) {\n\t\t\t\treturn formatDate(date, 'MM月DD日 HH:mm')\n\t\t\t},\n\n\t\t\t// 获取活动状态信息\n\t\t\tgetStatusInfo(activity) {\n\t\t\t\tconst now = new Date()\n\t\t\t\tconst startTime = new Date(activity.start_time)\n\t\t\t\tconst endTime = new Date(activity.end_time)\n\n\t\t\t\tif (now < startTime) {\n\t\t\t\t\treturn { text: '即将开始', color: '#007aff' }\n\t\t\t\t} else if (now >= startTime && now <= endTime) {\n\t\t\t\t\treturn { text: '进行中', color: '#ff9500' }\n\t\t\t\t} else {\n\t\t\t\t\treturn { text: '已结束', color: '#8e8e93' }\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// 获取类型信息\n\t\t\tgetTypeInfo(type) {\n\t\t\t\treturn this.activityTypes[type] || { icon: '📅', name: '未知' }\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style scoped>\n\t.activity-page {\n\t\tbackground-color: #f5f5f5;\n\t\tmin-height: 100vh;\n\t\tpadding-bottom: 120rpx;\n\t}\n\n\t.filter-bar {\n\t\tbackground-color: white;\n\t\tpadding: 20rpx;\n\t\tborder-bottom: 1rpx solid #f0f0f0;\n\t}\n\n\t.filter-scroll {\n\t\twhite-space: nowrap;\n\t}\n\n\t.filter-item {\n\t\tdisplay: inline-block;\n\t\tpadding: 16rpx 32rpx;\n\t\tmargin-right: 20rpx;\n\t\tbackground-color: #f8f9fa;\n\t\tborder-radius: 25rpx;\n\t\tfont-size: 28rpx;\n\t\tcolor: #666;\n\t\ttransition: all 0.3s;\n\t}\n\n\t.filter-item.active {\n\t\tbackground-color: #007aff;\n\t\tcolor: white;\n\t}\n\n\t.type-filter {\n\t\tbackground-color: white;\n\t\tpadding: 20rpx;\n\t\tborder-bottom: 1rpx solid #f0f0f0;\n\t}\n\n\t.type-scroll {\n\t\twhite-space: nowrap;\n\t}\n\n\t.type-item {\n\t\tdisplay: inline-block;\n\t\tpadding: 12rpx 24rpx;\n\t\tmargin-right: 16rpx;\n\t\tbackground-color: #f8f9fa;\n\t\tborder-radius: 20rpx;\n\t\tfont-size: 26rpx;\n\t\tcolor: #666;\n\t\ttransition: all 0.3s;\n\t}\n\n\t.type-item.active {\n\t\tbackground-color: #e3f2fd;\n\t\tcolor: #1976d2;\n\t}\n\n\t.activity-list {\n\t\tpadding: 20rpx;\n\t}\n\n\t.activity-card {\n\t\tbackground-color: white;\n\t\tborder-radius: 16rpx;\n\t\tmargin-bottom: 20rpx;\n\t\toverflow: hidden;\n\t\tbox-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.1);\n\t}\n\n\t.activity-header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 20rpx 30rpx;\n\t\tbackground-color: #f8f9fa;\n\t}\n\n\t.activity-type {\n\t\tfont-size: 32rpx;\n\t}\n\n\t.activity-status {\n\t\tfont-size: 26rpx;\n\t\tfont-weight: bold;\n\t}\n\n\t.activity-content {\n\t\tpadding: 30rpx;\n\t}\n\n\t.activity-title {\n\t\tfont-size: 32rpx;\n\t\tfont-weight: bold;\n\t\tcolor: #333;\n\t\tdisplay: block;\n\t\tmargin-bottom: 16rpx;\n\t\tline-height: 1.4;\n\t\tword-wrap: break-word;\n\t\tword-break: break-all;\n\t\t/* 限制最多显示2行 */\n\t\tdisplay: -webkit-box;\n\t\t-webkit-line-clamp: 2;\n\t\t-webkit-box-orient: vertical;\n\t\toverflow: hidden;\n\t}\n\n\t.activity-desc {\n\t\tfont-size: 28rpx;\n\t\tcolor: #666;\n\t\tline-height: 1.5;\n\t\tdisplay: block;\n\t\tmargin-bottom: 20rpx;\n\t\tword-wrap: break-word;\n\t\tword-break: break-all;\n\t\t/* 限制最多显示3行 */\n\t\tdisplay: -webkit-box;\n\t\t-webkit-line-clamp: 3;\n\t\t-webkit-box-orient: vertical;\n\t\toverflow: hidden;\n\t}\n\n\t.activity-details {\n\t\tmargin-bottom: 20rpx;\n\t}\n\n\t.detail-item {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-bottom: 12rpx;\n\t}\n\n\t.detail-icon {\n\t\tfont-size: 28rpx;\n\t\tmargin-right: 12rpx;\n\t\twidth: 32rpx;\n\t}\n\n\t.detail-text {\n\t\tfont-size: 26rpx;\n\t\tcolor: #666;\n\t\tflex: 1;\n\t\tword-wrap: break-word;\n\t\tword-break: break-all;\n\t\tline-height: 1.3;\n\t}\n\n\t.activity-footer {\n\t\tborder-top: 1rpx solid #f0f0f0;\n\t\tpadding-top: 20rpx;\n\t}\n\n\t.creator {\n\t\tfont-size: 24rpx;\n\t\tcolor: #999;\n\t}\n\n\t.empty-state {\n\t\ttext-align: center;\n\t\tpadding: 100rpx 40rpx;\n\t}\n\n\t.empty-icon {\n\t\tfont-size: 80rpx;\n\t\tdisplay: block;\n\t\tmargin-bottom: 20rpx;\n\t}\n\n\t.empty-title {\n\t\tfont-size: 32rpx;\n\t\tcolor: #333;\n\t\tdisplay: block;\n\t\tmargin-bottom: 16rpx;\n\t}\n\n\t.empty-subtitle {\n\t\tfont-size: 28rpx;\n\t\tcolor: #666;\n\t\tdisplay: block;\n\t}\n\n\t.loading-state {\n\t\ttext-align: center;\n\t\tpadding: 60rpx;\n\t\tcolor: #666;\n\t}\n\n\t.create-btn {\n\t\tposition: fixed;\n\t\tbottom: 40rpx;\n\t\tright: 40rpx;\n\t\twidth: 120rpx;\n\t\theight: 120rpx;\n\t\tbackground-color: #007aff;\n\t\tborder-radius: 60rpx;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tbox-shadow: 0 4rpx 12rpx rgba(0, 122, 255, 0.3);\n\t\tz-index: 100;\n\t}\n\n\t.create-icon {\n\t\tfont-size: 48rpx;\n\t\tcolor: white;\n\t\tfont-weight: bold;\n\t}\n</style>\n","import MiniProgramPage from 'C:/vscode/kirojianlu/jianlu-uniapp/pages/activity/activity.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","activityApi","showError","formatDate"],"mappings":"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"}